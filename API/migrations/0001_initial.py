# Generated by Django 3.1.6 on 2021-02-03 16:28

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Compounds',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('smiles', models.CharField(blank=True, max_length=255, null=True)),
                ('code', models.CharField(blank=True, max_length=32, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CrystalPlate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('drop_volume', models.FloatField()),
                ('plate_type', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Library',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('for_industry', models.BooleanField(default=False)),
                ('public', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='LibraryPlate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('current', models.BooleanField(default=True)),
                ('last_tested', models.DateField(auto_now=True)),
                ('library', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='plates', to='API.library')),
            ],
        ),
        migrations.CreateModel(
            name='LibrarySubset',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('origin', models.CharField(max_length=64)),
                ('compounds', models.ManyToManyField(to='API.Compounds')),
                ('library', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='API.library')),
            ],
        ),
        migrations.CreateModel(
            name='Protein',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('space_group', models.CharField(blank=True, max_length=100, null=True)),
                ('a', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('b', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('c', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('alpha', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('beta', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('gamma', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SoakDBCompound',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('library_name', models.CharField(max_length=100)),
                ('library_plate', models.CharField(max_length=100)),
                ('well', models.CharField(max_length=4)),
                ('code', models.CharField(max_length=100)),
                ('smiles', models.CharField(max_length=256)),
            ],
        ),
        migrations.CreateModel(
            name='SourceWell',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('well', models.CharField(max_length=4)),
                ('concentration', models.IntegerField(blank=True, null=True)),
                ('compound', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='locations', to='API.compounds')),
                ('library_plate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='compounds', to='API.libraryplate')),
            ],
        ),
        migrations.CreateModel(
            name='Preset',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=64, null=True)),
                ('description', models.TextField()),
                ('subsets', models.ManyToManyField(to='API.LibrarySubset')),
            ],
        ),
        migrations.CreateModel(
            name='Batch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField(default=0)),
                ('soak_status', models.CharField(blank=True, max_length=64, null=True)),
                ('soak_time', models.IntegerField(blank=True, null=True)),
                ('solv_frac', models.FloatField(blank=True, null=True)),
                ('stock_conc', models.FloatField(blank=True, null=True)),
                ('cryo_frac', models.FloatField(blank=True, null=True)),
                ('cryo_status', models.CharField(blank=True, max_length=64, null=True)),
                ('cryo_stock_frac', models.FloatField(blank=True, null=True)),
                ('cryo_location', models.CharField(blank=True, max_length=4, null=True)),
                ('crystal_plate', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='API.crystalplate')),
            ],
        ),
    ]
